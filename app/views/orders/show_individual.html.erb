

<div id="admin-order-ctnr">
  <div>Order created:<span id="counter">TIMER </span><span> ago</span></div>
  <div id=""><%=@processed%></div>
  <div id="customer-details-container"><div class="sngl-ordr-tmstmp">Created: @<%=@timestamp%></div>
    <div id="cust-name"><span class="make-bold">Customer name:</span>
      <div class ="make-look-nice"> <%=@name %>
      </div>
    </div>
    <div id= "cust-tel"><span class="make-bold">Contact:</span>
      <div class ="make-look-nice">
        Tel: <%=@contact %>| Email: <%=@email%>
      </div>
    </div>
    <div id="cust-address"><span class="make-bold">Delivery address:</span>
      <div class ="make-look-nice">
        <%=@delivery %>
      </div>
    </div>
  </div>
  <div id="cust-order"><span class="make-bold">Ordered Dishes:</span>
    <div id="inner-cust-order">
      <% if @orderlength == 0 %>
        <div id="no-order-wrng"><%=@order_has_no_value %></div>
      <% else %>
        <% @dishes.each do |key, array| %>
          <% @dish_name = "#{key}" %>
          <%  @value = array %>
          <div class="ordered-dish-name"><%=@value%> x <%=@dish_name%></div>
        <% end %>
      <% end %>
    </div>
    <div id="cust-instructions"><span class="make-bold">Customer Instructions:</span>
      <div class ="make-look-nice">
        <%=@instructions%>
      </div>
    </div>
  </div>
</div>




<script>

//order timer scripting
function CountUp(initDate, id){
    this.beginDate = new Date(initDate);
    this.countainer = document.getElementById(id);
    this.numOfDays = [ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];
    this.borrowed = 0, this.years = 0, this.months = 0, this.days = 0;
    this.hours = 0, this.minutes = 0, this.seconds = 0;
    this.updateNumOfDays();
    this.updateCounter();
}

CountUp.prototype.updateNumOfDays=function(){
    var dateNow = new Date();
    var currYear = dateNow.getFullYear();
    if ( (currYear % 4 == 0 && currYear % 100 != 0 ) || currYear % 400 == 0 ) {
        this.numOfDays[1] = 29;
    }
    var self = this;
    setTimeout(function(){self.updateNumOfDays();}, (new Date((currYear+1), 1, 2) - dateNow));
}

CountUp.prototype.datePartDiff=function(then, now, MAX){
    var diff = now - then - this.borrowed;
    this.borrowed = 0;
    if ( diff > -1 ) return diff;
    this.borrowed = 1;
    return (MAX + diff);
}
CountUp.prototype.calculate=function(){
    var currDate = new Date();
    var prevDate = this.beginDate;
    this.seconds = this.datePartDiff(prevDate.getSeconds(), currDate.getSeconds(), 60);
    this.minutes = this.datePartDiff(prevDate.getMinutes(), currDate.getMinutes(), 60);
    this.hours = this.datePartDiff(prevDate.getHours(), currDate.getHours(), 24);
    this.days = this.datePartDiff(prevDate.getDate(), currDate.getDate(), this.numOfDays[currDate.getMonth()]);
}
CountUp.prototype.addLeadingZero=function(value){
    return value < 10 ? ("0" + value) : value;
}
CountUp.prototype.formatTime=function(){
    this.seconds = this.addLeadingZero(this.seconds);
    this.minutes = this.addLeadingZero(this.minutes);
    this.hours = this.addLeadingZero(this.hours);
}
CountUp.prototype.updateCounter=function(){
    this.calculate();
    this.formatTime();
    this.countainer.innerHTML =
        " <strong>" + this.days + "</strong> <small>" + (this.days == 1? "day" : "days") + "</small>" +
        " <strong>" + this.hours + "</strong> <small>" + (this.hours == 1? "hour" : "hours") + "</small>" +
        " <strong>" + this.minutes + "</strong> <small>" + (this.minutes == 1? "minute" : "minutes") + "</small>" +
        " <strong>" + this.seconds + "</strong> <small>" + (this.seconds == 1? "second" : "seconds") + "</small>";
    var self = this;
    setTimeout(function(){self.updateCounter();}, 1000);
}
window.onload=function(){ new CountUp('<%=@timestamp_two%>', 'counter'); }


</script>
